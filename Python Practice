Last login: Fri Feb 12 17:25:59 on ttys002
kushali@Kushalis-MBP ~ % code
kushali@Kushalis-MBP ~ % python3 Python_practice.py
/Library/Frameworks/Python.framework/Versions/3.7/Resources/Python.app/Contents/MacOS/Python: can't open file 'Python_practice.py': [Errno 2] No such file or directory
kushali@Kushalis-MBP ~ % python3
Python 3.7.6 (v3.7.6:43364a7ae0, Dec 18 2019, 14:18:50) 
[Clang 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> type(3)
<class 'int'>
>>> type(ballots)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'ballots' is not defined
>>> type(73.81)
<class 'float'>
>>> type("Hello World")
<class 'str'>
>>> type(True)
<class 'bool'>
>>> num_candidates = 3
>>> winning_percentage = 73.81
>>> candidate = "Diane"
>>> won_election = True
>>> help("keywords")

Here is a list of the Python keywords.  Enter any keyword to get more help.

False               class               from                or
None                continue            global              pass
True                def                 if                  raise
and                 del                 import              return
as                  elif                in                  try
assert              else                is                  while
async               except              lambda              with
await               finally             nonlocal            yield
break               for                 not                 

>>> counties = ["Arapahoe
  File "<stdin>", line 1
    counties = ["Arapahoe
                        ^
SyntaxError: EOL while scanning string literal
>>> counties = ["Arapahoe", "Denver", "Jefferson"]
>>> counties
['Arapahoe', 'Denver', 'Jefferson']
>>> counties[0]
'Arapahoe'
>>> print(counties[2])
Jefferson
>>> pring(counties[-1])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'pring' is not defined
>>> print(counties[-1])
Jefferson
>>> len(counties)
3
>>> counties[0:2]
['Arapahoe', 'Denver']
>>> counties[0:1]
['Arapahoe']
>>> counties[:2]
['Arapahoe', 'Denver']
>>> counties.append("El Paso")
>>> counties
['Arapahoe', 'Denver', 'Jefferson', 'El Paso']
>>> counties.insert(2, "El Paso")
>>> counties
['Arapahoe', 'Denver', 'El Paso', 'Jefferson', 'El Paso']
>>> counties.remove("El Paso")
>>> counties
['Arapahoe', 'Denver', 'Jefferson', 'El Paso']
>>> counties.pop(3)
'El Paso'
>>> counties
['Arapahoe', 'Denver', 'Jefferson']
>>> counties[2] = "El Paso"
>>> counties
['Arapahoe', 'Denver', 'El Paso']
>>> counties.insert(1, "El Paso")
>>> counties
['Arapahoe', 'El Paso', 'Denver', 'El Paso']
>>> counties.remove("Arapahoe")
>>> counties
['El Paso', 'Denver', 'El Paso']
>>> counties.insert(2, "Denver")
>>> counties
['El Paso', 'Denver', 'Denver', 'El Paso']
>>> 
>>> 
>>> counties_tuple = ("Arapahoe","Denver","Jefferson")
>>> counties
['El Paso', 'Denver', 'Denver', 'El Paso']
>>> len(counties_tuple)
3
>>> counties_tuple[1] 
'Denver'
>>> counties_dict = {}
>>> counties_dict["Arapahoe"] = 422829
>>> counties_dict
{'Arapahoe': 422829}
>>> >>> counties_dict["Denver"] = 463353
  File "<stdin>", line 1
    >>> counties_dict["Denver"] = 463353
     ^
SyntaxError: invalid syntax
>>> >>> counties_dict["Jefferson"] = 432438
  File "<stdin>", line 1
    >>> counties_dict["Jefferson"] = 432438
     ^
SyntaxError: invalid syntax
>>> counties_dict["Denver"] = 422829
>>> counties_dict
{'Arapahoe': 422829, 'Denver': 422829}
>>> counties_dict["Jefferson"] = 432438
>>> counties_dict
{'Arapahoe': 422829, 'Denver': 422829, 'Jefferson': 432438}
>>> len(counties_dict)
3
>>> counties_dict.items()
dict_items([('Arapahoe', 422829), ('Denver', 422829), ('Jefferson', 432438)])
>>> counties_dict.keys()
dict_keys(['Arapahoe', 'Denver', 'Jefferson'])
>>> counties_dict.values()
dict_values([422829, 422829, 432438])
>>> counties_dict.get("Denver")
422829
>>> counties_dict[Arapahoe]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'Arapahoe' is not defined
>>> counties_dict['Arapahoe']
422829
>>> counties_dict["Arapahoe"]
422829
>>> 
>>> 
>>> voting_data = []
>>> voting_data.append({"county":"Arapahoe", "registered_voters": 422829})
>>> voting_data.append({"county":"Denver", "registered_voters": 463353})
>>> voting_data.append({"county":"Jefferson", "registered_voters": 432438})
>>> voting_data
[{'county': 'Arapahoe', 'registered_voters': 422829}, {'county': 'Denver', 'registered_voters': 463353}, {'county': 'Jefferson', 'registered_voters': 432438}]
>>> >>> voting_data.append({"county":"El Paso", "registered_voters": 461149})
>>> voting_data
[{'county': 'Arapahoe', 'registered_voters': 422829}, {'county': 'Denver', 'registered_voters': 463353}, {'county': 'Jefferson', 'registered_voters': 432438}, {'county': 'El PAl Paso', 'registered_voters': 461149}]
>>> voting_data = []
>>> voting_data.append({"county":"Arapahoe", "registered_voters": 422829})
>>> voting_data.append({"county":"Denver", "registered_voters": 463353})
>>> voting_data.append({"county":"Jefferson", "registered_voters": 432438})
>>> voting_data.append({"county":"El Paso", "registered_voters": 461149})
>>> voting_data
[{'county': 'Arapahoe', 'registered_voters': 422829}, {'county': 'Denver', 'registered_voters': 463353}, {'county': 'Jefferson', 'registered_voters': 432438}, {'county': 'El Paso', 'registered_voters': 461149}]
>>> voting_data.pop(0)
{'county': 'Arapahoe', 'registered_voters': 422829}
>>> voting_data
[{'county': 'Denver', 'registered_voters': 463353}, {'county': 'Jefferson', 'registered_voters': 432438}, {'county': 'El Paso', 'registered_voters': 461149}]
>>> 
>>> 
>>> # How many votes did you get?
>>> my_votes = int(input("How many votes did you get in the election? "))
How many votes did you get in the election? #  Total votes in the election
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: invalid literal for int() with base 10: '#  Total votes in the election'
>>> total_votes = int(input("What is the total votes in the election? "))
What is the total votes in the election? # Calculate the percentage of votes you received.
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: invalid literal for int() with base 10: '# Calculate the percentage of votes you received.'
>>> percentage_votes = (my_votes / total_votes) * 100
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'my_votes' is not defined
>>> print("I received " + str(percentage_votes)+"% of the total votes.")

